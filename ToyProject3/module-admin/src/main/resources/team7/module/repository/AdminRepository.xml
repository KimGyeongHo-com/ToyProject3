<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="team7.module.repository.AdminRepository">

    <select id="getAllUsers" resultType="AllUsersInfoDto">
        SELECT u.id, u.name, u.nickname, u.email, u.user_role AS userrole, IFNULL(qtyOfBoard, 0) AS qtyOfBoard, IFNULL(qtyOfReply, 0) AS qtyOfReply
        FROM users u
        LEFT JOIN ( SELECT user_id, COUNT(id) AS qtyOfBoard FROM board GROUP BY user_id) b ON u.id = b.user_id
        LEFT JOIN ( SELECT b.user_id, COUNT(r.id) AS qtyOfReply FROM board b LEFT JOIN reply r ON b.id = r.board_id GROUP BY b.user_id ) r ON u.id = r.user_id
    </select>

    <select id="getAllUsersOrderByBoard" resultType="AllUsersInfoDto">
        SELECT u.id, u.name, u.nickname, u.email, u.user_role AS userrole, IFNULL(qtyOfBoard, 0) AS qtyOfBoard, IFNULL(qtyOfReply, 0) AS qtyOfReply
        FROM users u
        LEFT JOIN ( SELECT user_id, COUNT(id) AS qtyOfBoard FROM board GROUP BY user_id) b ON u.id = b.user_id
        LEFT JOIN ( SELECT b.user_id, COUNT(r.id) AS qtyOfReply FROM board b LEFT JOIN reply r ON b.id = r.board_id GROUP BY b.user_id ) r ON u.id = r.user_id
        ORDER BY qtyOfBoard DESC;
    </select>

    <select id="getAllUsersOrderByReply" resultType="AllUsersInfoDto">
        SELECT u.id, u.name, u.nickname, u.email, u.user_role AS userrole, IFNULL(qtyOfBoard, 0) AS qtyOfBoard, IFNULL(qtyOfReply, 0) AS qtyOfReply
        FROM users u
        LEFT JOIN ( SELECT user_id, COUNT(id) AS qtyOfBoard FROM board GROUP BY user_id) b ON u.id = b.user_id
        LEFT JOIN ( SELECT b.user_id, COUNT(r.id) AS qtyOfReply FROM board b LEFT JOIN reply r ON b.id = r.board_id GROUP BY b.user_id ) r ON u.id = r.user_id
        ORDER BY qtyOfReply DESC;
    </select>

    <select id="findUserById" resultType="team7.module.domain.user.User">
        SELECT * FROM users WHERE id = #{id}
    </select>

    <update id="updateRoleById">
        UPDATE users SET user_role = #{userrole} WHERE id = #{id}
    </update>

    <select id="getAllBoards" resultType="AdminBoardDto">
        SELECT b.id, u.nickname, b.title, b.created_At
        FROM board b LEFT OUTER JOIN users u ON user_id = u.id
    </select>

    <select id="findBoardById" resultType="team7.module.domain.board.Board">
        select * from board WHERE id = #{id}
    </select>

    <delete id="deleteBoardById">
        DELETE FROM board WHERE id = #{id}
    </delete>

    <delete id="deleteRepliesByBoardId">
        DELETE FROM reply WHERE board_id = #{id}
    </delete>

    <update id="updateBoardStatusReport">
        UPDATE board SET board_status = #{boardStatus} WHERE id = #{id}
    </update>

    <update id="updateBoardStatus">
        UPDATE board SET board_status = #{boardStatus} WHERE id = #{id}
    </update>

    <select id="getAllReport" resultType="team7.module.domain.report.Report">
        select * from report
    </select>

    <select id="findReportsByBoardId" resultType="AdminReportDto">
        SELECT r.id, u.nickname, b.title, u.id as userId, u.user_role as userRole, r.description, r.file_path as filePath FROM report r
        LEFT OUTER JOIN board b ON r.board_id = b.id
        LEFT OUTER JOIN users u ON r.user_id = u.id
    </select>

    <update id="updateBlackById">
        UPDATE users SET user_role = #{userrole} WHERE id = #{id}
    </update>

    <delete id="deleteReportByBoardId">
        DELETE FROM report WHERE id = #{id}
    </delete>

    <update id="updateReportBlackById">
        UPDATE users SET role = #{role} WHERE id = #{id}
    </update>

    <update id="updateBlacklistByBoardId">
        UPDATE users SET role = #{role}, user_role = #{userRole} WHERE id = #{id}
    </update>

</mapper>